name: Update Mods of Server

on:
  push:
    branches:
    - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Deploy static site to S3 bucket
      run: aws s3 sync ./ s3://minecraft-server-devops-pro-fin --delete
    
    - name: Apagar EC2
      run: |
          aws ec2 stop-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }}
          echo "Instancia EC2 apagada."

    - name: Esperar a que la instancia esté en 'stopped'
      run: |
          aws ec2 wait instance-stopped --instance-ids ${{ secrets.EC2_INSTANCE_ID }}
          echo "La instancia EC2 está apagada."

    - name: Prender EC2
      run: |
          aws ec2 start-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }}
          echo "Instancia EC2 prendida."

    - name: Esperar a que la instancia esté en 'running'
      run: |
          aws ec2 wait instance-running --instance-ids ${{ secrets.EC2_INSTANCE_ID }}
          echo "La instancia EC2 está corriendo."

    - name: Configuracion EC2 Actualizacion de mods
      env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          IP_ADDRESS: ${{ secrets.IP_ADDRESS }}
          USER_NAME: ${{ secrets.EC2_USER_NAME }}
      run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${IP_ADDRESS} << 'EOF'

          sudo apt update

          rm -rf ~/minecraft/mods/
          aws s3 cp s3://minecraft-server-devops-pro-fin/setup/mods /minecraft/mods --recursive

          cd ~/minecraft
          sudo ./run.sh


          EOF
          rm private_key
          
